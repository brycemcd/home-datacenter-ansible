---
- hosts: reading_backend_new
  vars:
    install_path: /opt/apps/reading_backend_new
    app_user: reading_backend
    app_name: readingbackend
    template_path: ../templates
    email_parser_path: /opt/apps/reading_backend_new/src/email_link_parser
  become: yes
  become_user: "{{app_user}}"
  become_method: sudo

  tasks:
  - name: pull master
    git:
      repo: "https://github.com/brycemcd/scalatramess.git"
      dest: "{{install_path}}"

  # NOTE: There MUST be a Scala community convention for this:
  - name: make sure project dependencies are present
    template:
      src: "{{template_path}}/plugins.sbt"
      dest: "{{install_path}}/project/plugins.sbt"
      mode: 0755
      owner: "{{app_user}}"
      group: "{{app_user}}"

  - template:
      src: "{{template_path}}/build.properties"
      dest: "{{install_path}}/project/build.properties"
      mode: 0755
      owner: "{{app_user}}"
      group: "{{app_user}}"

  - name: build latest docker image
    docker_image:
      path: "{{install_path}}"
      name: "{{app_name}}"

  - template:
      src: "{{template_path}}/reading_app.secret.env"
      dest: "{{install_path}}/secrets.env"
      mode: 0400

  - name: stop and remove old container
    command: docker stop readingbackend
    ignore_errors: yes

  - command: docker container rm readingbackend
    ignore_errors: yes

  - name: start container
    docker_container:
      name: "{{app_name}}"
      image: "{{app_name}}"
      # FIXME: this throws an exception
      # auto_remove: yes
      restart_policy: unless-stopped
      env_file: "{{install_path}}/secrets.env"
      env:
        SQSMessageQueueName: email-listicle-mail-messages
        DB_JDBC_URL: jdbc:postgresql://psql02.thedevranch.net/reading

  # Now for the email message parser
  - name: stop and remove old container
    command: docker stop email_message_parser
    ignore_errors: yes

  - command: docker container rm email_message_parser
    ignore_errors: yes

  - name: build latest docker image
    command: docker image rm email_message_parser
    ignore_errors: yes

  #- name: build latest docker image
    #command: "docker build --force-rm -t email_message_parser {{email_parser_path}}"

  - name: build latest docker image
    docker_image:
      path: "{{email_parser_path}}"
      name: email_message_parser

  - name: start email_message_parser container
    docker_container:
      name: email_message_parser
      image: email_message_parser
      recreate: yes
      restart_policy: unless-stopped
      env_file: "{{install_path}}/secrets.env"
